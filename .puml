@startuml  uml
top to bottom direction
package web {
    class SearchTaxiController <<controller>> {
        - SearchCab searchCab
        - MatcherCostumerCab MatcherCostumerCab
        + ResponseEntity<?> searchCabs(CoordinatesDTO coordinatesDTO)
    }
}
package domain{
    entity Address <<entity>> {
        - Long id
        - String city
        - Point location
        - String reference
    }

    entity TaxiLiveAddress <<Entity>> {
        - Taxi taxi
    }

    entity Taxi <<entity>> {
        - Long id
        - Vehicle vehicle
        - Driver driver
        - Enum status
        - TaxiLiveAddress
    }

    interface TaxiLiveAddressRepository <<interface>> {
        + List<TaxiLiveAddress> findNearbyTaxis(String pointwtk, double meters)
    }
}

package shared {
    class CoordinatesDTO <<DTO>>{
        - double latitude
        - double longitude
        + getLatitude()
        + getLongitude()
    }

    class SearchCabDTO <<DTO>> {
        - SearchCabType seachCabType
        - CoordinatesDTO coordinatesDTO
    }

    enum SearchCabType <<enum>> {
        + SEARCH_CAB_BY_DISTANCE
    }

    class CabDTO {
        - Long id
        - String vehicleInfo
        - String driverInfo
        - String status
        - String liveAddress
    }

}

package service {
    interface IFindCabsService <<interface>>{
        + List<Taxi> findNearbyCabs(CoordinatesDTO coordinatesDTO, double meters)
    }

    class FindCabsServiceImpl <<service>>{
        - TaxiLiveAddressRepository TaxiLiveAddressRepository
        + List<Taxi> findNearbyCabs(CoordinatesDTO coordinatesDTO, double meters) <<override>>
    }

    abstract class SearchCab <<abstract class>>{
        + List<TaxiDTO> findCabs()
    }

    class SearchCabByDistance <<service>> {
        - IFindCabsService findCabsService
        - double distanceMax
        - CoordinatesDTO coordinatesDTO
        + List<TaxiDTO> findCabs()
    }

    interface SearchCabFactory <<interface>>{
        + SearchCab createSearchCab(SearchCabDTO searchCabDTO)
    }

    class SearchCabFactoryImpl {
        + SearchCab createSearchCab(SearchCabDTO searchCabDTO)
    }

    interface MatcherCostumerCab {
        + setCabsToNotify(List<TaxiDTO> taxiDTO)
        + setClientDTO(ClientDTO clientDTO)
        + attach(TaxiDTO taxiDTO)
        + dettach(Long id)
        + Optional<TaxiDTO> notify()
    }

    class MatcherCostumerCabImpl {
        - IRoadNotificationService requestRoad
        - ClientDTO clientDTO
        - List<TaxiDTO> cabsToNotify
        + setCabsToNotify(List<TaxiDTO> taxiDTO)
        + setClientDTO(ClientDTO clientDTO)
        + attach(TaxiDTO taxiDTO)
        + dettach(Long id)
        + Optional<TaxiDTO> notify()
    }

    interface INotificationService {
        + send(String title, String message)
        + setSender(Sender sender)
    }

    interface SenderNotification {
        +send(String title, String message)
    }

    interface SenderNotificationPush {
        + send(String title, String message)
    }

    class SenderNotificationPushImpl {
        - NotificationRepository notificationRepository
        + send(String title, String message)
    }

    interface IRoadNotificationService {
        + send(String title, String message)
        + setSender(Sender sender)
        + boolean isRoadAccept(Long id)
    }






}




Address <|-- TaxiLiveAddress
TaxiLiveAddressRepository --> TaxiLiveAddress
Taxi *-- TaxiLiveAddress
IFindCabsService ..> CoordinatesDTO
IFindCabsService ..> Taxi

IFindCabsService <|.. FindCabsServiceImpl
FindCabsServiceImpl --> TaxiLiveAddressRepository

SearchCab <|-- SearchCabByDistance
SearchCabByDistance --> IFindCabsService

SearchTaxiController ..> CoordinatesDTO
SearchTaxiController --> SearchCab
SearchTaxiController --> MatcherCostumerCab

SearchTaxiController ..> SearchCabFactory
SearchCabFactory <.. SearchCabFactoryImpl
SearchCabFactory ..> SearchCabDTO
SearchCabDTO --> SearchCabType

MatcherCostumerCab <.. MatcherCostumerCabImpl
SenderNotification <|-- SenderNotificationPush
INotificationService <|-- IRoadNotificationService

MatcherCostumerCabImpl <-- IRoadNotificationService
SenderNotificationPush <|-- SenderNotificationPushImpl
SenderNotification <-- INotificationService
@enduml